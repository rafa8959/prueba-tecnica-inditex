openapi: 3.0.3
info:
  title: Inditex Price API
  version: 1.0.0
  description: >
    REST API to query applicable prices for a given product of a specific brand
    at a certain date and time.  
    Hexagonal architecture, API-First approach, in-memory H2 database.  
    Versioned under /v1 for backward compatibility.

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /v1/prices:
    get:
      tags:
        - Prices
      summary: Gets applicable prices for a given brand and product at a specific date.
      operationId: getApplicablePrices
      description: |
        Returns a list of prices filtered by the provided parameters.
        All parameters are optional â€” if none are provided, the full price list is returned.
        The list is sorted in descending order of priority.
      parameters:
        - name: applicationDate
          in: query
          required: false
          description: Optional Application date in ISO 8601 format. If not provided, all pricess will be returned.
          schema:
            type: string
            format: date-time
            example: 2020-06-14T16:00:00
        - name: productId
          in: query
          required: false
          description: Optional Product identifier. If not provided, results are not filtered by product.
          schema:
            type: integer
            example: 35455
        - name: brandId
          in: query
          required: false
          description: Optional Brand identifier. If not provided, results are not filtered by brand.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: List of applicable prices sorted by priority
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceResponse'
              examples:
                multipleResults:
                  summary: Multiple applicable prices found
                  value:
                    - productId: 35455
                      brandId: 1
                      priceList: 2
                      startDate: '2020-06-14T15:00:00'
                      endDate: '2020-06-14T18:30:00'
                      priority: 1
                      price: 25.45
                      currency: EUR
                    - productId: 35455
                      brandId: 1
                      priceList: 1
                      startDate: '2020-06-14T00:00:00'
                      endDate: '2020-12-31T23:59:59'
                      priority: 0
                      price: 35.50
                      currency: EUR
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "Invalid request parameters"
        '404':
          description: No prices found for the provided parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "No price found for given parameters"

components:
  schemas:
    PriceResponse:
      type: object
      required:
        - productId
        - brandId
        - priceList
        - startDate
        - endDate
        - priority
        - price
        - currency
      properties:
        productId:
          type: integer
          example: 35455
        brandId:
          type: integer
          example: 1
        priceList:
          type: integer
          example: 2
        startDate:
          type: string
          format: date-time
          example: '2020-06-14T15:00:00'
        endDate:
          type: string
          format: date-time
          example: '2020-06-14T18:30:00'
        priority:
          type: integer
          description: Informative field indicating the relative priority of the rate
          example: 1
        price:
          type: number
          format: double
          example: 25.45
        currency:
          type: string
          example: EUR

    ErrorResponse:
      type: object
      required: [message]
      properties:
        message:
          type: string
          example: "No price found for given parameters"
